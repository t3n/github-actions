name: Terraform Merge - Deploy

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      terraform_version:
        type: string
        required: false
        default: '1.1.4'
    secrets:
      GOOGLE_APPLICATION_CREDENTIALS:
        required: true

env:
  TF_WORKSPACE: ${{ inputs.environment }}

jobs:
  parse:
    if: inputs.environment == 'live'
    runs-on: ubuntu-20.04
    steps:
      - name: Comment on Issue
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: 'Deployment Initiated ðŸš€'

      - name: Get Issue Data
        uses: peter-murray/issue-body-parser-action@v1
        id: issue_body_parser
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          issue_id: ${{ github.event.issue.number }}         
          payload: yaml

      - name: Remove isue tag
        uses: actions-ecosystem/action-remove-labels@v1
        if: ${{ startsWith(github.event.comment.body, '/approve') }}
        with:
          labels: |
            wait-for-approval

  deploy:
    runs-on: ubuntu-20.04
    needs: [parse]
    if: ${{ always() }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: Terraform Init
        id: init
        run: terraform init -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -var-file _${{ inputs.environment }}.json -no-color -lock-timeout=20s -out plan_${{ inputs.environment }}.out

      - name: Terraform Apply
        id: apply
        run: terraform apply -no-color -lock-timeout=20s plan_${{ inputs.environment }}.out

      - name: Bump version and push tag (stage)
        if: inputs.environment == 'stage'
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
          create_annotated_tag: true
          custom_release_rules: >
            hotfix:patch:Fix,
            fix:patch:Fix,
            patch:patch:Fix,
            bug:patch:Fix,
            security:patch:Security,
            feat:minor:Feature,
            feature:minor:Feature,
            minor:minor:Feature,
            breaking:major:BREAKING,
            break:major:BREAKING,
            major:major:BREAKING,
            stable:major:BREAKING,
            release:major:BREAKING
          
      - name: Create issue for approval
        if: inputs.environment == 'stage'
        id: create_issue
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ steps.tag_version.outputs.new_tag }}
          CHANGELOG: ${{ steps.tag_version.outputs.changelog }}
        with:
          filename: .github/approve-deployment.md

      - name: Close issue after live deployment
        if: inputs.environment == 'stage'
        uses: peter-evans/close-issue@v1.0.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          comment: 'Deployment Completed ðŸŒŸ'

  tf-lint-test:
    runs-on: ubuntu-20.04
    needs: [deploy]
    if: inputs.environment == 'live'
          