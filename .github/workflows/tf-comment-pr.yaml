name: Terraform PR - Comment

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      terraform_version:
        type: string
        required: false
        default: '1.1.4'
    secrets:
      GOOGLE_APPLICATION_CREDENTIALS:
        required: true

env:
  TF_WORKSPACE: ${{ inputs.environment }}

jobs:
  comment-pr:
    runs-on: ubuntu-20.04
    steps:
      - name: Comment on PR
        uses: actions/github-script@v5
        env:
          format_out: ${{ needs.lint-and-test.outputs.format_out }}
          format_err: ${{ needs.lint-and-test.outputs.format_err }}
          format_result: ${{ needs.lint-and-test.outputs.format_result }}
          init_out: ${{ needs.lint-and-test.outputs.init_out }}
          init_err: ${{ needs.lint-and-test.outputs.init_err }}
          init_result: ${{ needs.lint-and-test.outputs.init_result }}
          workspace_out: ${{ needs.lint-and-test.outputs.workspace_out }}
          workspace_err: ${{ needs.lint-and-test.outputs.workspace_err }}
          workspace_result: ${{ needs.lint-and-test.outputs.workspace_result }}
          validate_out: ${{ needs.lint-and-test.outputs.validate_out }}
          validate_err: ${{ needs.lint-and-test.outputs.validate_err }}
          validate_result: ${{ needs.lint-and-test.outputs.validate_result }}
          plan: "${{ needs.lint-and-test.outputs.plan }}"
          plan_result: ${{ needs.lint-and-test.outputs.plan_result }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const CODE_BLOCK = '```';
            const fmt_result = '${{ env.format_result }}' === 'failure' ? ':x:' : ':heavy_check_mark:';
            const init_result = '${{ env.init_result }}' === 'failure' ? ':x:' : ':heavy_check_mark:';
            const validate_result = '${{ env.validate_result }}' === 'failure' ? ':x:' : ':heavy_check_mark:';
            const workspace_result = '${{ env.workspace_result }}' === 'failure' ? ':x:' : ':heavy_check_mark:';
            const plan_result = '${{ env.plan_result }}' === 'failure' ? ':x:' : ':heavy_check_mark:';

            const output = `
            ### ${ fmt_result } Terraform Format and Style üé®
            <details><summary>Logs</summary>
            Output

            ${ CODE_BLOCK }diff
            ${ process.env.format_out }
            ${ CODE_BLOCK }

            Errors

            ${ CODE_BLOCK }
            ${ process.env.format_err }
            ${ CODE_BLOCK }
            </details> <!-- End Format Logs -->

            ### ${ init_result } Terraform Initialization ‚öôÔ∏è
            <details><summary>Logs</summary>
            Output

            ${ CODE_BLOCK }
            ${ process.env.init_out }
            ${ CODE_BLOCK }

            Errors

            ${ CODE_BLOCK }
            ${ process.env.init_err }
            ${ CODE_BLOCK }
            </details> <!-- End Init Logs -->

            ### ${ validate_result } Terraform Validation ü§ñ
            <details><summary>Logs</summary>
            Output
            
            ${ CODE_BLOCK }
            ${ process.env.validate_out }
            ${ CODE_BLOCK }
            
            Errors
            
            ${ CODE_BLOCK }
            ${ process.env.validate_err }
            ${ CODE_BLOCK }
            </details> <!-- End Validate Logs -->

            ### ${ workspace_result } Terraform select Workspace üëà
            <details><summary>Logs</summary>
            Output
            
            ${ CODE_BLOCK }
            ${ process.env.workspace_out }
            ${ CODE_BLOCK }
            
            Errors
            
            ${ CODE_BLOCK }
            ${ process.env.workspace_err }
            ${ CODE_BLOCK }
            </details> <!-- End Workspace Logs -->

            ### ${ plan_result } Terraform Plan üìñ
            <details><summary>Logs</summary>
            
            ${ CODE_BLOCK }terraform
            ${ process.env.plan }
            ${ CODE_BLOCK }
            </details>
        
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
          
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform errored
        if: |
          env.format_result == 'failure' ||
          env.init_result == 'failure' ||
          env.workspace_result == 'failure' ||
          env.validate_result == 'failure' ||
          env.plan_result == 'failure'
        run: exit 1
