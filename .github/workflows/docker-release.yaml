name: Docker Release
on:
  workflow_call:
    inputs:
      PROJECT:
        type: string
        required: true
      FULLNAME_OVERRIDE:
        type: string
        required: false
        default: ""
      GCP_REGISTRY:
        type: string
        required: false
        default: "eu.gcr.io"
      GCP_PROJECT_ID:
        type: string
        required: true
      GAR_REGISTRY:
        type: string
        required: false
        default: "europe-west3-docker.pkg.dev"
      GAR_REPOSITORY:
        type: string
        required: false
        default: "images"
    secrets:
      GCR_JSON_KEY:
        required: true
      GAR_HELM_REGISTRY_ACCOUNT:
        required: true

jobs:
  docker-release:
    runs-on: ubuntu-22.04
    steps:
      - name: lowercase things
        id: lowercase
        env:
          project: ${{inputs.PROJECT}}
          postfix: ${{inputs.DOCKER_IMAGE_TAG_POSTFIX}}
        run: |
          echo "project=${project,,}"  >> "$GITHUB_OUTPUT"
          echo "postfix=${postfix,,}"  >> "$GITHUB_OUTPUT"

      - name: download a build artifact
        uses: actions/download-artifact@v4.1.4
        id: download
        with:
          name: artifacts_image_${{steps.lowercase.outputs.project}}

      - name: docker load
        run: docker image load --input image_${{steps.lowercase.outputs.project}}.tar

      - name: get the image ids
        id: get_image_ids
        run: echo "ids=$(docker images --format "{{.Repository}}:{{.Tag}}"| grep ${{inputs.PROJECT}})" >> $GITHUB_OUTPUT

      - name: login to gcr
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ inputs.GCP_REGISTRY }}
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}

      - name: login to gar
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ inputs.GAR_REGISTRY}}
          username: _json_key
          password: ${{ secrets.GAR_HELM_REGISTRY_ACCOUNT }}

      - name: push to registry
        run: |
          TAGS="${{steps.get_image_ids.outputs.ids}}"
          for tag in ${TAGS}; do
            docker push "${tag}"
          done
