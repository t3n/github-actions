name: Helm PR Tests

on:
  workflow_call:
    secrets:
      GKE_CLUSTER_K8S_VERSION_STAGE:
        required: true
      GKE_CLUSTER_K8S_VERSION_LIVE:
        required: true
  # pull_request:
  #   paths:
  #     - charts/**

env:
  KUBECONFORM_VERSION: v0.4.12
  KUBEVAL_VERSION: v0.16.1
  KIND_NODE_VERSION: v1.21.1@sha256:fae9a58f17f18f06aeac9772ca8b5ac680ebbed985e266f711d936e91d113bad # See https://github.com/kubernetes-sigs/kind/releases
  HELM_GCS_VERSION: "0.3.1"
  HELM_VERSION: "3.9.0"

jobs:
  lint:
    name: lint
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: ‚öóÔ∏è [INSTALL] helm
        uses: azure/setup-helm@v1
        with:
          version: ${{ env.HELM_VERSION }}

      - name: ‚öóÔ∏è [INSTALL] helm gcs plugin
        run: |
          helm plugin install https://github.com/nouney/helm-gcs --version ${{ env.HELM_GCS_VERSION }}

      - name: ‚öóÔ∏è [INSTALL] kubeconform
        run: |
          wget https://github.com/yannh/kubeconform/releases/download/${{ env.KUBECONFORM_VERSION }}/kubeconform-linux-amd64.tar.gz
          sudo tar xzf kubeconform-linux-amd64.tar.gz -C /usr/bin/
          kubeconform --help

      - name: ‚öóÔ∏è [INSTALL] kubeval
        run: |
          wget https://github.com/instrumenta/kubeval/releases/download/${{ env.KUBEVAL_VERSION }}/kubeval-linux-amd64.tar.gz
          sudo tar xzf kubeval-linux-amd64.tar.gz -C /usr/bin/
          kubeconform --help

      - name: ‚öóÔ∏è [INSTALL] python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: ‚öóÔ∏è [INSTALL] chart-testing
        uses: helm/chart-testing-action@v2.2.0

      - name: üìã [RUN] lint
        run: ct lint --target-branch main

      - name: üìã [RUN] template value files
        run: |
          for FOLDER in $(ct list-changed --target-branch main)
          do
              echo "== ${FOLDER} =========="
              for VALUE_FILE in $(find $(ct list-changed --config ct.yaml) -type f -name "*-values.yaml")
              do
                  echo ":: templating with ${VALUE_FILE}"
                  mkdir -p ./tmp/"${FOLDER}"
                  helm template -f "${VALUE_FILE}" "${FOLDER}" > ./tmp/"${FOLDER}"/"$(basename "${VALUE_FILE}" .yaml)".out.yaml
              done
          done

      - name: üìã [RUN] kubeconform & kubeval
        run: |
          for FILE in $(find ./tmp -type f -name "*.out.yaml")
          do
              echo "== STAGE K8S VERSION ${{ secrets.GKE_CLUSTER_K8S_VERSION_STAGE }} =========="
              kubeconform -summary -kubernetes-version ${{ secrets.GKE_CLUSTER_K8S_VERSION_STAGE }} "${FILE}"
              kubeval "${FILE}" --kubernetes-version ${{ secrets.GKE_CLUSTER_K8S_VERSION_STAGE }} --additional-schema-locations https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master

              echo "== LIVE K8S VERSION ${{ secrets.GKE_CLUSTER_K8S_VERSION_LIVE }} =========="
              kubeconform -summary -kubernetes-version ${{ secrets.GKE_CLUSTER_K8S_VERSION_LIVE }} "${FILE}"
              kubeval "${FILE}" --kubernetes-version ${{ secrets.GKE_CLUSTER_K8S_VERSION_LIVE }} --additional-schema-locations https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master
          done

      - name: ‚öóÔ∏è [INSTALL] empheral cluster
        uses: helm/kind-action@v1.2.0
        with:
          node_image: "docker.io/kindest/node:${{ env.KIND_NODE_VERSION }}"

      - name: üß™ [DEPLOY] on empheral cluster
        run: |
          for FOLDER in $(ct list-changed --config ct.yaml)
          do
              echo "== ${FOLDER} =========="
              for VALUE_FILE in $(find $(ct list-changed --config ct.yaml) -type f -name "*-values.yaml")
              do
                  echo ":: installing with ${VALUE_FILE}"
                  helm upgrade $(yq e '.nameOverride' "${VALUE_FILE}" ) ${FOLDER} --install --atomic --values "${VALUE_FILE}" --create-namespace --namespace $(basename "${VALUE_FILE}" .yaml)
              done
          done





