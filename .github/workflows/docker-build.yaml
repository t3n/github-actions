name: Docker Build
on:
  workflow_call:
    inputs:
      PROJECT:
        type: string
        required: true
      FILE:
        type: string
        required: false
        default: Dockerfile
      TARGET:
        type: string
        required: false
        default: null
      BUILD_LATEST:
        type: boolean
        required: false
        default: false
      TAG_PREFIX:
        type: string
        required: false
        default: null
      TAG_SUFFIX:
        type: string
        required: false
        default: null
      GCP_PROJECT_ID:
        type: string
        required: true
      GCP_REGISTRY:
        type: string
        required: false
        default: "eu.gcr.io"
      GAR_REGISTRY:
        type: string
        required: false
        default: "europe-west3-docker.pkg.dev"
      GAR_REPOSITORY:
        type: string
        required: false
        default: "images"
      CONTEXT:
        type: string
        default: .
      BUILD_ARGS:
        type: string
        required: false
      FULLNAME_OVERRIDE:
        type: string
        required: false
        default: null
    secrets:
      SECRETS:
        required: false
      SSH_KEY:
        required: false
      BUILD_ARGS:
        required: false
    outputs:
      DOCKER_METADATA_OUTPUT_VERSION:
        value: ${{ jobs.docker-build.outputs.DOCKER_METADATA_OUTPUT_VERSION }}
      DOCKER_METADATA_OUTPUT_TAGS:
        value: ${{ jobs.docker-build.outputs.DOCKER_METADATA_OUTPUT_TAGS }}
      DOCKER_METADATA_OUTPUT_LABELS:
        value: ${{ jobs.docker-build.outputs.DOCKER_METADATA_OUTPUT_LABELS }}
      DOCKER_METADATA_OUTPUT_ANNOTATIONS:
        value: ${{ jobs.docker-build.outputs.DOCKER_METADATA_OUTPUT_ANNOTATIONS }}
      DOCKER_METADATA_OUTPUT_JSON:
        value: ${{ jobs.docker-build.outputs.DOCKER_METADATA_OUTPUT_JSON }}

jobs:
  docker-build:
    runs-on: ubuntu-22.04
    outputs:
      DOCKER_METADATA_OUTPUT_VERSION: ${{ steps.meta.outputs.version }}
      DOCKER_METADATA_OUTPUT_TAGS: ${{ steps.meta.outputs.tags }}
      DOCKER_METADATA_OUTPUT_LABELS: ${{ steps.meta.outputs.labels}}
      DOCKER_METADATA_OUTPUT_ANNOTATIONS: ${{ steps.meta.outputs.annotations}}
      DOCKER_METADATA_OUTPUT_JSON: ${{ steps.meta.outputs.json}}
    steps:
      - name: checkout
        uses: actions/checkout@v4.1.1

      - name: set up qemu
        uses: docker/setup-qemu-action@v3.0.0

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3.1.0

      - name: add key to ssh-agent
        uses: webfactory/ssh-agent@v0.9.0
        if: "${{ env.SSH_KEY != ''}}"
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: lowercase things
        id: lowercase
        env:
          project: ${{inputs.PROJECT}}
        run: |
          echo "project=${project,,}"  >> "$GITHUB_OUTPUT"

      - name: calculate tag
        id: tag_version
        if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' }}
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main,stage
          create_annotated_tag: true
          tag_prefix: ""
          dry_run: true

      - name: Docker Metadata action
        uses: docker/metadata-action@v5.4.0
        id: meta
        with:
          flavor: |
            latest=${{inputs.BUILD_LATEST}}
            prefix=${{inputs.TAG_PREFIX}}
            suffix=${{inputs.TAG_SUFFIX}}
          images: |
            name=${{ inputs.GCP_REGISTRY }}/${{ inputs.GCP_PROJECT_ID }}/${{ inputs.FULLNAME_OVERRIDE && inputs.FULLNAME_OVERRIDE || steps.lowercase.outputs.project }}
            name=${{ inputs.GAR_REGISTRY }}/${{ inputs.GCP_PROJECT_ID }}/${{inputs.GAR_REPOSITORY}}/${{ inputs.FULLNAME_OVERRIDE && inputs.FULLNAME_OVERRIDE || steps.lowercase.outputs.project }}
          tags: |
            type=raw,value=${{ steps.tag_version.outputs.new_tag }}
            type=schedule,pattern=nightly
            type=ref,event=branch
            type=ref,event=pr
          labels: |
            org.opencontainers.image.created={{date 'YYYYMMDD'}}
            org.opencontainers.image.ref.name=${{ github.ref }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.title=${{ github.repository }}
            org.opencontainers.image.version=${{ steps.tag_version.outputs.new_tag }}

      - name: build
        uses: docker/build-push-action@v5.1.0
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        with:
          build-args: ${{inputs.BUILD_ARGS}}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ${{inputs.CONTEXT}}
          file: ${{inputs.FILE}}
          labels: ${{ steps.meta.outputs.labels }}
          load: false
          outputs: type=docker,dest=./image_${{steps.lowercase.outputs.project}}.tar
          push: false
          secrets: ${{secrets.SECRETS}}
          ssh: ${{ env.SSH_KEY != '' && 'default' || null }}
          tags: ${{ steps.meta.outputs.tags }}
          target: ${{inputs.TARGET}}

      - name: upload
        uses: actions/upload-artifact@v4.3.1
        with:
          name: artifacts_image_${{steps.lowercase.outputs.project}}
          path: ./image_${{steps.lowercase.outputs.project}}.tar
          retention-days: 1
